<%
  options = { :method => :get,
    :url => weekly_reporting_path,
    :with => "Form.serialize(document.forms['filters'])",
    :before => "Element.show('spinner')",
    :success => "Element.hide('spinner')" }

  #We create next/previous weeks links
  last_week = @start_date - 1.week
  link_text = image_previous_page +
    _('Week of the %s') % I18n.l(last_week, :format => '%d %B')
  js_call = "document.forms['filters'].elements['report[start_date]'].value='#{last_week.strftime("%Y-%m-%d")}';"
  js_call << remote_function(options)
  link_previous = link_to_function(link_text, js_call)

  next_week = @start_date + 1.week
  link_text = _('Week of the %s') % I18n.l(next_week, :format => '%d %B') +
    image_next_page
  js_call = "document.forms['filters'].elements['report[start_date]'].value='#{next_week.strftime("%Y-%m-%d")}';"
  js_call << remote_function(options)
  link_next = link_to_function(link_text, js_call)
%>

<div style="float: right">
  <p><%= link_previous %>&nbsp;|&nbsp;<%= link_next %></p>
</div>
<h1><%= @title %>&nbsp;<%= image_spinner %></h1>

<%= calendar_weekly(@start_date, :start_time => @opening_time,
  :end_time => @closing_time) do |time|
  key = "#{time.day}_#{time.hour}_#{time.min*30/30}"
  result = '<h3><p>'

  issues = @issues[key]
  next unless issues
  if issues.has_key? :new_issues
    res = []
    issues[:new_issues].each do |i|
      res.push link_to_issue_tiny(i)
    end
    unless res.empty?
      result << "#{image_new}&nbsp;["
      result << res.join(', ')
      result << ']'
    end
  end

  if issues.has_key? :running_issues
    res = []
    issues[:running_issues].each do |i|
      res.push link_to_issue_tiny(i)
    end
    unless res.empty?
      result << '<br/>' if issues.has_key? :new_issues
      result << "#{image_sla_running}&nbsp;["
      result << res.join(', ')
      result << ']'
    end
  end

  if issues.has_key? :closed_issues
    res = []
    issues[:closed_issues].each do |i|
      res.push link_to_issue_tiny(i)
    end
    unless res.empty?
      result << '<br/>' if issues.has_key? :new_issues or issues.has_key? :closed_issues
      result << "#{image_stop}&nbsp;["
      result << res.join(', ')
      result << ']'
    end
  end
  result << '</p></h3>'
end
%>
